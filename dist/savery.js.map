{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 612de7aaefea887c94b9","webpack:///./src/index.js","webpack:///./~/blob-polyfill/Blob.js","webpack:///./src/Savery.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/mime.js"],"names":["savery","fileName","options","type","restOfOptions","mimeType","data","save","saveryInstance","Savery","name","autoBOM","error","filename","forceLoad","onAbort","onAfterSave","onBeforeSave","onEndSave","onError","onStartSave","size","status","PENDING","_onAfterSave","COMPLETE","Promise","reject","_onBeforeSave","_onCreateFile","PROCESSING","blob","file","objectUrl","_onEndSave","_onError","CANCELLED","ERROR","_onSave","fileObject","FileReader","location","href","_onStartSave","shouldAutoBom","Error","resolve","then","catch","DEFAULT_MIME_TYPE","MIME_TYPE_REGEXP","STATUSES","GLOBAL","window","global","DOCUMENT","document","URL","webkitURL","LINK","createElementNS","AUTO_BOM_REGEXP","CHROME_OR_IOS_REGEXP","READER_REPLACE_REGEXP","SAFARI_REGEXP","HAS_DOWNLOAD_ATTRIBUTE_SUPPORT","HAS_MSSAVEBLOB_SUPPORT","navigator","msSaveBlob","IS_CHROME_OR_IOS","test","userAgent","IS_SAFARI","HTMLElement","safari","REVOKE_TIMEOUT","mime","require","CONFIRMATION_MESSAGE","createBlob","Blob","createObjectUrl","createObjectURL","getMimeType","passedMimeType","fileExtension","slice","lastIndexOf","toLowerCase","lookup","lowerCaseMimeType","split","searchedMimeType","noop","openPopupOrNavigate","url","popup","open","confirm","passThrough","object","revokeObjectUrl","setTimeout","revokeObjectURL","remove","triggerClick","node","event","MouseEvent","dispatchEvent","saveWithDownloadAttribute","download","saveWithFileReader","reader","onloadend","result","replace","readAsDataURL","saveWithSaveMsBlob","setAutoBom","String","fromCharCode","MIME_TYPES","bmp","conf","css","csv","dmg","doc","docx","gif","gz","html","jar","jpeg","jpg","js","json","log","map","mov","mp3","mp4","oga","ogg","ogv","pdf","png","ps","pps","ppt","pptx","psd","qt","rar","rtf","svg","text","torrent","txt","tiff","war","weba","webm","webp","xls","xlsx","zip","extension"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnCA;;AAGA;;;;AAGA;;;;;;AAPA;;;AAGA;;;AAGA;;;AAWA;;;;;;;;;;;;;;;;;AANA;AAqBA,KAAMA,SAAS,SAATA,MAAS,GAAwE;AAAA,OAAvEC,QAAuE,uEAApD,cAAoD;AAAA,OAApCC,OAAoC,uEAAjB,EAAiB;AAAA,OAEnFC,IAFmF,GAIjFD,OAJiF,CAEnFC,IAFmF;;AAAA,OAGhFC,aAHgF,4BAIjFF,OAJiF;;AAKrF,OAAMG,WAAmB,wBAAYF,IAAZ,EAAkBF,QAAlB,CAAzB;;AAEA,UAAO,YAAkC;AAAA,SAAjCK,IAAiC,uEAArB,IAAqB;;AACvC,YAAO,qBAAWA,IAAX,EAAiBL,QAAjB,eACFG,aADE;AAELC;AAFK,QAAP;AAID,IALD;AAMD,EAbD;;AAeA;;;;;;;;;;;;;;;;AAgBAL,QAAOO,IAAP,GAAc,UAACD,IAAD,EAAYL,QAAZ,EAA8BC,OAA9B,EAAwE;AACpF,OAAMM,iBAA6BR,OAAOC,QAAP,EAAiBC,OAAjB,CAAnC;;AAEA,UAAOM,eAAeF,IAAf,EAAqBC,IAArB,EAAP;AACD,EAJD;;mBAMeP,M;;;;;;;ACvEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,MAAK;AACL;AACA,MAAK;AACL,iCAAgC;AAChC,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,aAAa;AACvB;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,2CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;;;;;AChND;;;AAWA;;;AAVA;;AAWA;;;;AAaA;KAMMS,M;AACJ,mBAAYH,IAAZ,EAAuBI,IAAvB,EAAwE;AAAA;;AAAA,SAAnCR,OAAmC,uEAAhB,EAAgB;;AAAA;;AAAA,UA6BxES,OA7BwE,GA6BrD,IA7BqD;AAAA,UA8BxEL,IA9BwE,GA8B5D,IA9B4D;AAAA,UA+BxEM,KA/BwE,GA+BxD,IA/BwD;AAAA,UAgCxEC,QAhCwE,GAgCrD,EAhCqD;AAAA,UAiCxEC,SAjCwE,GAiCnD,KAjCmD;AAAA,UAkCxEC,OAlCwE;AAAA,UAmCxEC,WAnCwE;AAAA,UAoCxEC,YApCwE;AAAA,UAqCxEC,SArCwE;AAAA,UAsCxEC,OAtCwE;AAAA,UAuCxEC,WAvCwE;AAAA,UAwCxEC,IAxCwE,GAwCzD,CAxCyD;AAAA,UAyCxEC,MAzCwE,GAyCvD,oBAASC,OAzC8C;AAAA,UA0CxElB,QA1CwE;;AAAA,UAkDxEmB,YAlDwE,GAkDzD,YAAW;AACxB,WAAI,MAAKF,MAAL,KAAgB,oBAASG,QAA7B,EAAuC;AACrC,gBAAOC,QAAQC,MAAR,OAAP;AACD;;AAED,cAAO,MAAKX,WAAL,OAAP;AACD,MAxDuE;;AAAA,UAgExEY,aAhEwE,GAgExD,YAAW;AACzB,WAAI,MAAKN,MAAL,KAAgB,oBAASC,OAA7B,EAAsC;AACpC,gBAAOG,QAAQC,MAAR,OAAP;AACD;;AAED,cAAO,MAAKV,YAAL,CAAkB,MAAKX,IAAvB,CAAP;AACD,MAtEuE;;AAAA,UA8ExEuB,aA9EwE,GA8ExD,YAAM;AACpB,WAAI,MAAKP,MAAL,KAAgB,oBAASQ,UAA7B,EAAyC;AACvC,gBAAOJ,QAAQC,MAAR,OAAP;AACD;;AAED,WAAMI,OAAa,uBAAW,MAAKzB,IAAhB,EAAsB,MAAKD,QAA3B,CAAnB;AACA,WAAM2B,OAAa,MAAKrB,OAAL,GAAe,uBAAWoB,IAAX,CAAf,GAAkCA,IAArD;AACA,WAAME,YAAoB,4BAAgBD,IAAhB,CAA1B;;AAEA,aAAKX,IAAL,GAAYU,KAAKV,IAAjB;;AAEA,cAAO;AACLW,mBADK;AAELC;AAFK,QAAP;AAID,MA7FuE;;AAAA,UAsGxEC,UAtGwE,GAsG3D,UAACD,SAAD,EAA4C;AACvD,WAAI,MAAKX,MAAL,KAAgB,oBAASQ,UAA7B,EAAyC;AACvC,gBAAOJ,QAAQC,MAAR,OAAP;AACD;;AAED,mCAAgBM,SAAhB;;AAEA,aAAKX,MAAL,GAAc,oBAASG,QAAvB;AACA,aAAKP,SAAL;;AAEA,cAAOe,SAAP;AACD,MAjHuE;;AAAA,UA0HxEE,QA1HwE,GA0H7D,UAACvB,KAAD,EAAmB;AAC5B,WAAI,MAAKU,MAAL,KAAgB,oBAASc,SAA7B,EAAwC;AACtC,eAAKd,MAAL,GAAc,oBAASe,KAAvB;AACD;;AAED,aAAKlB,OAAL,CAAaP,KAAb;;AAEA,cAAOc,QAAQC,MAAR,CAAef,KAAf,CAAP;AACD,MAlIuE;;AAAA,UA6IxE0B,OA7IwE,GA6I9D,UAACC,UAAD,EAAwB;AAChC,WAAI,MAAKjB,MAAL,KAAgB,oBAASQ,UAA7B,EAAyC;AACvC,gBAAOJ,QAAQC,MAAR,OAAP;AACD;;AAH+B,WAM9BK,IAN8B,GAQ5BO,UAR4B,CAM9BP,IAN8B;AAAA,WAO9BC,SAP8B,GAQ5BM,UAR4B,CAO9BN,SAP8B;;;AAUhC,8CAA4B;AAC1B,wCAAmBD,IAAnB,EAAyB,MAAKnB,QAA9B;;AAEA,gBAAOoB,SAAP;AACD;;AAED,sDAAoC;AAClC,+CAA0BA,SAA1B,EAAqC,MAAKpB,QAA1C;;AAEA,gBAAOoB,SAAP;AACD;;AAED,WAAK,+BAAqB,MAAKnB,SAAL,wBAAtB,IAAuD,kBAAO0B,UAAlE,EAA8E;AAC5E,gBAAO,+BAAmBR,IAAnB,CAAP;AACD;;AAED,WAAI,MAAKlB,SAAT,EAAoB;AAClB,2BAAO2B,QAAP,CAAgBC,IAAhB,GAAuBT,SAAvB;AACD,QAFD,MAEO;AACL,yCAAoBA,SAApB;AACD;;AAED,aAAKX,MAAL,GAAc,oBAASG,QAAvB;;AAEA,cAAOQ,SAAP;AACD,MAhLuE;;AAAA,UAwLxEU,YAxLwE,GAwLzD,YAA8B;AAC3C,WAAI,MAAKrB,MAAL,KAAgB,oBAASC,OAA7B,EAAsC;AACpC,gBAAOG,QAAQC,MAAR,OAAP;AACD;;AAED,aAAKL,MAAL,GAAc,oBAASQ,UAAvB;AACA,aAAKV,WAAL;;AAEA;AACD,MAjMuE;;AAAA,SAEpEf,QAFoE,GAUlEH,OAVkE,CAEpEG,QAFoE;AAAA,4BAUlEH,OAVkE,CAGpEa,OAHoE;AAAA,SAGpEA,OAHoE;AAAA,gCAUlEb,OAVkE,CAIpEc,WAJoE;AAAA,SAIpEA,WAJoE;AAAA,iCAUlEd,OAVkE,CAKpEe,YALoE;AAAA,SAKpEA,YALoE;AAAA,4BAUlEf,OAVkE,CAMpEiB,OANoE;AAAA,SAMpEA,OANoE;AAAA,gCAUlEjB,OAVkE,CAOpEkB,WAPoE;AAAA,SAOpEA,WAPoE;AAAA,8BAUlElB,OAVkE,CAQpEgB,SARoE;AAAA,SAQpEA,SARoE;AAAA,iCAUlEhB,OAVkE,CASpE0C,aAToE;AAAA,SASpEA,aAToE,yCASpD,IAToD;;;AAYtE,UAAKjC,OAAL,GAAeiC,aAAf;AACA,UAAKtC,IAAL,GAAYA,IAAZ;AACA,UAAKM,KAAL,GAAa,IAAb;AACA,UAAKC,QAAL,GAAgBH,IAAhB;AACA,UAAKI,SAAL,GAAiBT,yCAAjB;AACA,UAAKA,QAAL,GAAgBA,QAAhB;;AAEA,UAAKU,OAAL,GAAeA,OAAf;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AACA,UAAKC,YAAL,GAAoBA,YAApB;AACA,UAAKE,OAAL,GAAeA,OAAf;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AACA,UAAKF,SAAL,GAAiBA,SAAjB;;AAEA,YAAO,IAAP;AACD;;AAiBD;;;;;;;;AAcA;;;;;;;;AAcA;;;;;;;;AAuBA;;;;;;;;;AAoBA;;;;;;;;;AAiBA;;;;;;;;;;;AA8CA;;;;;;;;;;;;AAiBA;;;;;6BAKQ;AACN,WAAI,KAAKI,MAAL,KAAgB,oBAASC,OAAzB,IAAoC,KAAKD,MAAL,KAAgB,oBAASQ,UAAjE,EAA6E;AAC3E,cAAKR,MAAL,GAAc,oBAASc,SAAvB;AACA,cAAKxB,KAAL,GAAa,IAAIiC,KAAJ,iBAAwB,KAAKhC,QAA7B,mBAAb;;AAEA,cAAKE,OAAL,CAAa,IAAb;;AAEA,gBAAO,IAAP;AACD;;AAED,YAAKH,KAAL,GAAa,IAAIiC,KAAJ,uCAA8C,KAAKhC,QAAnD,OAAb;;AAEA,cAAOa,QAAQC,MAAR,CAAe,IAAf,CAAP;AACD;;AAED;;;;;;;;4BAKO;AACL,cAAOD,QAAQoB,OAAR,GACJC,IADI,CACC,KAAKnB,aADN,EAEJmB,IAFI,CAEC,KAAKJ,YAFN,EAGJI,IAHI,CAGC,KAAKlB,aAHN,EAIJkB,IAJI,CAIC,KAAKT,OAJN,EAKJS,IALI,CAKC,KAAKb,UALN,EAMJa,IANI,CAMC,KAAKvB,YANN,EAOJwB,KAPI,CAOE,KAAKb,QAPP,CAAP;AAQD;;;;;;mBAGY1B,M;;;;;;;;;;;;;;ACpQf,KAAMwC,oBAA4B,0BAAlC;;AACA,KAAMC,mBAA2B,oCAAjC;;AAEA,KAAMC,WAAqB;AACzBf,cAAW,WADc;AAEzBX,aAAU,UAFe;AAGzBY,UAAO,OAHkB;AAIzBd,YAAS,SAJgB;AAKzBO,eAAY;AALa,EAA3B;;AAQA,KAAMsB,SAAiBC,UAAUC,MAAjC;AACA,KAAMC,WAAmBH,OAAOI,QAAhC;;AAEA,KAAMC,MAAcL,OAAOK,GAAP,IAAcL,OAAOM,SAAzC;AACA,KAAMC,OAA0BJ,SAASK,eAAT,CAAyB,8BAAzB,EAAyD,GAAzD,CAAhC;;AAEA,KAAMC,kBAA0B,4EAAhC;AACA,KAAMC,uBAA+B,cAArC;AACA,KAAMC,wBAAgC,cAAtC;AACA,KAAMC,gBAAwB,cAA9B;;AAEA,KAAMC,iCAA0C,cAAcN,IAA9D;AACA,KAAMO,yBAAkC,CAAC,EAAEd,OAAOe,SAAP,IAAoBf,OAAOe,SAAP,CAAiBC,UAAvC,CAAzC;AACA,KAAMC,mBAA4BP,qBAAqBQ,IAArB,CAA0BlB,OAAOe,SAAP,CAAiBI,SAA3C,CAAlC;AACA,KAAMC,YAAqBR,cAAcM,IAAd,CAAmBlB,OAAOqB,WAA1B,KAA0CrB,OAAOsB,MAA5E;;AAEA,KAAMC,iBAAyB,KAA/B;;SAEQd,e,GAAAA,e;SACAC,oB,GAAAA,oB;SACAb,iB,GAAAA,iB;SACAG,M,GAAAA,M;SACAa,8B,GAAAA,8B;SACAC,sB,GAAAA,sB;SACAG,gB,GAAAA,gB;SACAG,S,GAAAA,S;SACAb,I,GAAAA,I;SACAT,gB,GAAAA,gB;SACAa,qB,GAAAA,qB;SACAY,c,GAAAA,c;SACAX,a,GAAAA,a;SACAb,Q,GAAAA,Q;SACAM,G,GAAAA,G;;;;;;;;;;;;;;AC9CR;;AAWA;AACA,KAAMmB,OAAO,SAAgCC,QAAQ,YAAR,CAAhC,GAAwD,mBAAAA,CAAQ,CAAR,CAArE;;AAbA;;;AAeA,KAAMC,uBAA+B,6DACnC,yDADF;;AAGA;;;;;;;AAOA,KAAMC,aAAa,SAAbA,UAAa,CAACzE,IAAD,EAAYD,QAAZ,EAAuC;AACxD,UAAO,IAAI,kBAAO2E,IAAX,CAAgB,CAAC1E,IAAD,CAAhB,EAAwB;AAC7BH,WAAME;AADuB,IAAxB,CAAP;AAGD,EAJD;;SAMQ0E,U,GAAAA,U;;AAER;;;;;;;AAMA,KAAME,kBAAkB,SAAlBA,eAAkB,CAAClD,IAAD,EAAwB;AAC9C,UAAO0B,IAAIyB,eAAJ,CAAoBnD,IAApB,CAAP;AACD,EAFD;;SAIQkD,e,GAAAA,e;;AAER;;;;;;;;;;;;;;AAaA,KAAME,cAAc,SAAdA,WAAc,CAACC,cAAD,EAA0BnF,QAA1B,EAAuD;AACzE,OAAI,CAACmF,cAAL,EAAqB;AACnB,SAAMC,gBAAwBpF,SAASqF,KAAT,CAAerF,SAASsF,WAAT,CAAqB,GAArB,IAA4B,CAA3C,EAA8CC,WAA9C,EAA9B;;AAEA,YAAOZ,KAAKa,MAAL,CAAYJ,aAAZ,iCAAP;AACD;;AAED,OAAMK,oBAA4BN,eAAeI,WAAf,EAAlC;;AAEA,OAAI,4BAAiBlB,IAAjB,CAAsBoB,kBAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAtB,CAAJ,EAA4D;AAC1D,YAAOD,iBAAP;AACD;;AAED,OAAME,mBAA2BhB,KAAKa,MAAL,CAAYC,iBAAZ,CAAjC;;AAEA,OAAIE,gBAAJ,EAAsB;AACpB,YAAOA,gBAAP;AACD;;AAED;AACD,EApBD;;SAsBQT,W,GAAAA,W;;AAER;;;;;;AAKA,KAAMU,OAAO,SAAPA,IAAO,GAAY;AACvB,UAAO,IAAP;AACD,EAFD;;SAIQA,I,GAAAA,I;;AAER;;;;;;AAKA,KAAMC,sBAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAiB;AAC3C,OAAMC,QAAgB,kBAAOC,IAAP,CAAYF,GAAZ,EAAiB,QAAjB,CAAtB;;AAEA,OAAI,CAACC,KAAL,EAAY;AACV,SAAIE,QAAQpB,oBAAR,CAAJ,EAAmC;AACjC,yBAAOrC,QAAP,CAAgBC,IAAhB,GAAuBqD,GAAvB;AACD;AACF;AACF,EARD;;SAUQD,mB,GAAAA,mB;;AAER;;;;;;;AAMA,KAAMK,cAAc,SAAdA,WAAc,CAACC,MAAD,EAAsB;AACxC,UAAOA,MAAP;AACD,EAFD;;SAIQD,W,GAAAA,W;;AAER;;;;;;AAKA,KAAME,kBAAkB,SAAlBA,eAAkB,CAACrE,IAAD,EAAyB;AAC/CsE,cAAW,YAAM;AACf,SAAI,OAAOtE,IAAP,KAAgB,QAApB,EAA8B;AAC5ByB,WAAI8C,eAAJ,CAAoBvE,IAApB;AACD,MAFD,MAEO;AACLA,YAAKwE,MAAL;AACD;AACF,IAND;AAOD,EARD;;SAUQH,e,GAAAA,e;;AAER;;;;;;AAKA,KAAMI,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAuB;AAC1C,OAAMC,QAAoB,IAAIC,UAAJ,CAAe,OAAf,CAA1B;;AAEAF,QAAKG,aAAL,CAAmBF,KAAnB;AACD,EAJD;;SAMQF,Y,GAAAA,Y;;AAER;;;;;;;AAMA,KAAMK,4BAA4B,SAA5BA,yBAA4B,CAAC7E,SAAD,EAAoBvB,IAApB,EAAqC;AACrE,mBAAKgC,IAAL,GAAYT,SAAZ;AACA,mBAAK8E,QAAL,GAAgBrG,IAAhB;;AAEA+F;AACD,EALD;;SAOQK,yB,GAAAA,yB;;AAER;;;;;;;AAMA,KAAME,qBAAqB,SAArBA,kBAAqB,CAACjF,IAAD,EAAiC;AAC1D,OAAI,CAACA,IAAL,EAAW;AACT,YAAOL,QAAQC,MAAR,CAAe,IAAIkB,KAAJ,CAAU,iCAAV,CAAf,CAAP;AACD;;AAED,UAAO,IAAInB,OAAJ,CAAY,UAACoB,OAAD,EAAuB;AACxC,SAAMmE,SAAqB,IAAI,kBAAOzE,UAAX,EAA3B;;AAEAyE,YAAOC,SAAP,GAAmB,YAAW;AAC5B,WAAMnB,MAAM,8BAAmBkB,OAAOE,MAA1B,GAAmCF,OAAOE,MAAP,CAAcC,OAAd,mCAA6C,uBAA7C,CAA/C;;AAEAtB,2BAAoBC,GAApB;;AAEAjD,eAAQiD,GAAR;AACD,MAND;;AAQAkB,YAAOI,aAAP,CAAqBtF,IAArB;AACD,IAZM,CAAP;AAaD,EAlBD;;SAoBQiF,kB,GAAAA,kB;;AAER;;;;;;;AAMA,KAAMM,qBAAqB,SAArBA,kBAAqB,CAACvF,IAAD,EAAalB,QAAb,EAAkC;AAC3D,qBAAOsD,SAAP,CAAiBC,UAAjB,CAA4BrC,IAA5B,EAAkClB,QAAlC;AACD,EAFD;;SAIQyG,kB,GAAAA,kB;;AAER;;;;;;;;AAOA,KAAMC,aAAa,SAAbA,UAAa,CAACxF,IAAD,EAAsB;AACvC;AACA;AACA,OAAI,2BAAgBuC,IAAhB,CAAqBvC,KAAK5B,IAA1B,CAAJ,EAAqC;AACnC,YAAO,IAAI,kBAAO6E,IAAX,CAAgB,CAACwC,OAAOC,YAAP,CAAoB,MAApB,CAAD,EAA8B1F,IAA9B,CAAhB,EAAqD;AAC1D5B,aAAM4B,KAAK5B;AAD+C,MAArD,CAAP;AAGD;;AAED,UAAO4B,IAAP;AACD,EAVD;;SAYQwF,U,GAAAA,U;;;;;;;;;;;ACpOR,KAAMG,aAAa;AACjB,SAAM,6BADW;AAEjBC,QAAK,WAFY;AAGjBC,SAAM,YAHW;AAIjBC,QAAK,UAJY;AAKjBC,QAAK,UALY;AAMjBC,QAAK,+BANY;AAOjBC,QAAK,oBAPY;AAQjBC,SAAM,yEARW;AASjBC,QAAK,WATY;AAUjBC,OAAI,oBAVa;AAWjBC,SAAM,WAXW;AAYjBC,QAAK,0BAZY;AAajBC,SAAM,YAbW;AAcjBC,QAAK,YAdY;AAejBC,OAAI,wBAfa;AAgBjBC,SAAM,kBAhBW;AAiBjBC,QAAK,YAjBY;AAkBjBC,QAAK,kBAlBY;AAmBjBC,QAAK,iBAnBY;AAoBjBC,QAAK,WApBY;AAqBjBC,QAAK,WArBY;AAsBjBC,QAAK,WAtBY;AAuBjBC,QAAK,WAvBY;AAwBjBC,QAAK,WAxBY;AAyBjBC,QAAK,iBAzBY;AA0BjBC,QAAK,WA1BY;AA2BjBC,OAAI,wBA3Ba;AA4BjBC,QAAK,+BA5BY;AA6BjBC,QAAK,+BA7BY;AA8BjBC,SAAM,2EA9BW;AA+BjBC,QAAK,2BA/BY;AAgCjBC,OAAI,iBAhCa;AAiCjBC,QAAK,8BAjCY;AAkCjBC,QAAK,UAlCY;AAmCjBC,QAAK,eAnCY;AAoCjBC,SAAM,YApCW;AAqCjBC,YAAS,0BArCQ;AAsCjBC,QAAK,YAtCY;AAuCjBC,SAAM,YAvCW;AAwCjBC,QAAK,0BAxCY;AAyCjBC,SAAM,YAzCW;AA0CjBC,SAAM,YA1CW;AA2CjBC,SAAM,YA3CW;AA4CjBC,QAAK,0BA5CY;AA6CjBC,SAAM,mEA7CW;AA8CjBC,QAAK;AA9CY,EAAnB;;AAiDA;;;;;;AAMA,KAAM9E,SAAS,SAATA,MAAS,CAAC+E,SAAD,EAA+B;AAC5C,UAAO9C,WAAW8C,SAAX,KAAyB,EAAhC;AACD,EAFD;;mBAIe;AACb/E;AADa,E","file":"savery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"savery\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"savery\"] = factory();\n\telse\n\t\troot[\"savery\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 612de7aaefea887c94b9\n **/","// @flow\n\n// polyfills\nimport 'blob-polyfill';\n\n// main class\nimport Savery from './Savery';\n\n// utils\nimport {\n  getMimeType\n} from './utils';\n\n// types\nimport type {\n  Options,\n  Savery as SaveryType\n} from './types';\n\n/**\n * return function that will receive data and trigger saveAs\n *\n * @param {string} fileName=download\n * @param {object} options\n * @param {function} [options.onAbort]\n * @param {function} [options.onAfterSave]\n * @param {function} [options.onBeforeSave]\n * @param {function} [options.onEndSave]\n * @param {function} [options.onError]\n * @param {function} [options.onStartSave]\n * @param {boolean} [options.shouldAutoBom]\n * @param {string} [options.type]\n * @returns {function(data: *): void}\n */\nconst savery = (fileName: string = 'download.txt', options: Options = {}): Function => {\n  const {\n    type,\n    ...restOfOptions\n  } = options;\n  const mimeType: string = getMimeType(type, fileName);\n\n  return (data: any = null): SaveryType => {\n    return new Savery(data, fileName, {\n      ...restOfOptions,\n      mimeType\n    });\n  };\n};\n\n/**\n * one-line function to create the savery on the spot and fire the .save()\n *\n * @param {*} data\n * @param {string} fileName\n * @param {object} options\n * @param {function} [options.onAbort]\n * @param {function} [options.onAfterSave]\n * @param {function} [options.onBeforeSave]\n * @param {function} [options.onEndSave]\n * @param {function} [options.onError]\n * @param {function} [options.onStartSave]\n * @param {boolean} [options.shouldAutoBom]\n * @param {string} [options.type]\n * @returns {Promise}\n */\nsavery.save = (data: any, fileName: string, options: Options): Promise<SaveryType> => {\n  const saveryInstance: SaveryType = savery(fileName, options);\n\n  return saveryInstance(data).save();\n};\n\nexport default savery;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/* Blob.js\n * A Blob implementation.\n * 2014-07-24\n *\n * By Eli Grey, http://eligrey.com\n * By Devin Samarin, https://github.com/dsamarin\n * License: X11/MIT\n *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md\n */\n\n/*global self, unescape */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\n\n(function (view) {\n\t\"use strict\";\n\n\tview.URL = view.URL || view.webkitURL;\n\n\tif (view.Blob && view.URL) {\n\t\ttry {\n\t\t\tnew Blob;\n\t\t\treturn;\n\t\t} catch (e) {}\n\t}\n\n\t// Internally we use a BlobBuilder implementation to base Blob off of\n\t// in order to support older browsers that only have BlobBuilder\n\tvar BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) {\n\t\tvar\n\t\t\t  get_class = function(object) {\n\t\t\t\treturn Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n\t\t\t}\n\t\t\t, FakeBlobBuilder = function BlobBuilder() {\n\t\t\t\tthis.data = [];\n\t\t\t}\n\t\t\t, FakeBlob = function Blob(data, type, encoding) {\n\t\t\t\tthis.data = data;\n\t\t\t\tthis.size = data.length;\n\t\t\t\tthis.type = type;\n\t\t\t\tthis.encoding = encoding;\n\t\t\t}\n\t\t\t, FBB_proto = FakeBlobBuilder.prototype\n\t\t\t, FB_proto = FakeBlob.prototype\n\t\t\t, FileReaderSync = view.FileReaderSync\n\t\t\t, FileException = function(type) {\n\t\t\t\tthis.code = this[this.name = type];\n\t\t\t}\n\t\t\t, file_ex_codes = (\n\t\t\t\t  \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\n\t\t\t\t+ \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\n\t\t\t).split(\" \")\n\t\t\t, file_ex_code = file_ex_codes.length\n\t\t\t, real_URL = view.URL || view.webkitURL || view\n\t\t\t, real_create_object_URL = real_URL.createObjectURL\n\t\t\t, real_revoke_object_URL = real_URL.revokeObjectURL\n\t\t\t, URL = real_URL\n\t\t\t, btoa = view.btoa\n\t\t\t, atob = view.atob\n\n\t\t\t, ArrayBuffer = view.ArrayBuffer\n\t\t\t, Uint8Array = view.Uint8Array\n\n\t\t\t, origin = /^[\\w-]+:\\/*\\[?[\\w\\.:-]+\\]?(?::[0-9]+)?/\n\t\t;\n\t\tFakeBlob.fake = FB_proto.fake = true;\n\t\twhile (file_ex_code--) {\n\t\t\tFileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n\t\t}\n\t\t// Polyfill URL\n\t\tif (!real_URL.createObjectURL) {\n\t\t\tURL = view.URL = function(uri) {\n\t\t\t\tvar\n\t\t\t\t\t  uri_info = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t\t\t\t, uri_origin\n\t\t\t\t;\n\t\t\t\turi_info.href = uri;\n\t\t\t\tif (!(\"origin\" in uri_info)) {\n\t\t\t\t\tif (uri_info.protocol.toLowerCase() === \"data:\") {\n\t\t\t\t\t\turi_info.origin = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turi_origin = uri.match(origin);\n\t\t\t\t\t\turi_info.origin = uri_origin && uri_origin[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn uri_info;\n\t\t\t};\n\t\t}\n\t\tURL.createObjectURL = function(blob) {\n\t\t\tvar\n\t\t\t\t  type = blob.type\n\t\t\t\t, data_URI_header\n\t\t\t;\n\t\t\tif (type === null) {\n\t\t\t\ttype = \"application/octet-stream\";\n\t\t\t}\n\t\t\tif (blob instanceof FakeBlob) {\n\t\t\t\tdata_URI_header = \"data:\" + type;\n\t\t\t\tif (blob.encoding === \"base64\") {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + blob.data;\n\t\t\t\t} else if (blob.encoding === \"URI\") {\n\t\t\t\t\treturn data_URI_header + \",\" + decodeURIComponent(blob.data);\n\t\t\t\t} if (btoa) {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + btoa(blob.data);\n\t\t\t\t} else {\n\t\t\t\t\treturn data_URI_header + \",\" + encodeURIComponent(blob.data);\n\t\t\t\t}\n\t\t\t} else if (real_create_object_URL) {\n\t\t\t\treturn real_create_object_URL.call(real_URL, blob);\n\t\t\t}\n\t\t};\n\t\tURL.revokeObjectURL = function(object_URL) {\n\t\t\tif (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\n\t\t\t\treal_revoke_object_URL.call(real_URL, object_URL);\n\t\t\t}\n\t\t};\n\t\tFBB_proto.append = function(data/*, endings*/) {\n\t\t\tvar bb = this.data;\n\t\t\t// decode data to a binary string\n\t\t\tif (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n\t\t\t\tvar\n\t\t\t\t\t  str = \"\"\n\t\t\t\t\t, buf = new Uint8Array(data)\n\t\t\t\t\t, i = 0\n\t\t\t\t\t, buf_len = buf.length\n\t\t\t\t;\n\t\t\t\tfor (; i < buf_len; i++) {\n\t\t\t\t\tstr += String.fromCharCode(buf[i]);\n\t\t\t\t}\n\t\t\t\tbb.push(str);\n\t\t\t} else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\n\t\t\t\tif (FileReaderSync) {\n\t\t\t\t\tvar fr = new FileReaderSync;\n\t\t\t\t\tbb.push(fr.readAsBinaryString(data));\n\t\t\t\t} else {\n\t\t\t\t\t// async FileReader won't work as BlobBuilder is sync\n\t\t\t\t\tthrow new FileException(\"NOT_READABLE_ERR\");\n\t\t\t\t}\n\t\t\t} else if (data instanceof FakeBlob) {\n\t\t\t\tif (data.encoding === \"base64\" && atob) {\n\t\t\t\t\tbb.push(atob(data.data));\n\t\t\t\t} else if (data.encoding === \"URI\") {\n\t\t\t\t\tbb.push(decodeURIComponent(data.data));\n\t\t\t\t} else if (data.encoding === \"raw\") {\n\t\t\t\t\tbb.push(data.data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof data !== \"string\") {\n\t\t\t\t\tdata += \"\"; // convert unsupported types to strings\n\t\t\t\t}\n\t\t\t\t// decode UTF-16 to binary string\n\t\t\t\tbb.push(unescape(encodeURIComponent(data)));\n\t\t\t}\n\t\t};\n\t\tFBB_proto.getBlob = function(type) {\n\t\t\tif (!arguments.length) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(this.data.join(\"\"), type, \"raw\");\n\t\t};\n\t\tFBB_proto.toString = function() {\n\t\t\treturn \"[object BlobBuilder]\";\n\t\t};\n\t\tFB_proto.slice = function(start, end, type) {\n\t\t\tvar args = arguments.length;\n\t\t\tif (args < 3) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(\n\t\t\t\t  this.data.slice(start, args > 1 ? end : this.data.length)\n\t\t\t\t, type\n\t\t\t\t, this.encoding\n\t\t\t);\n\t\t};\n\t\tFB_proto.toString = function() {\n\t\t\treturn \"[object Blob]\";\n\t\t};\n\t\tFB_proto.close = function() {\n\t\t\tthis.size = 0;\n\t\t\tdelete this.data;\n\t\t};\n\t\treturn FakeBlobBuilder;\n\t}(view));\n\n\tview.Blob = function(blobParts, options) {\n\t\tvar type = options ? (options.type || \"\") : \"\";\n\t\tvar builder = new BlobBuilder();\n\t\tif (blobParts) {\n\t\t\tfor (var i = 0, len = blobParts.length; i < len; i++) {\n\t\t\t\tif (Uint8Array && blobParts[i] instanceof Uint8Array) {\n\t\t\t\t\tbuilder.append(blobParts[i].buffer);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbuilder.append(blobParts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar blob = builder.getBlob(type);\n\t\tif (!blob.slice && blob.webkitSlice) {\n\t\t\tblob.slice = blob.webkitSlice;\n\t\t}\n\t\treturn blob;\n\t};\n\n\tvar getPrototypeOf = Object.getPrototypeOf || function(object) {\n\t\treturn object.__proto__;\n\t};\n\tview.Blob.prototype = getPrototypeOf(new view.Blob());\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content || this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/blob-polyfill/Blob.js\n ** module id = 2\n ** module chunks = 0\n **/","// @flow\n\n// constants {\nimport {\n  DEFAULT_MIME_TYPE,\n  GLOBAL,\n  HAS_DOWNLOAD_ATTRIBUTE_SUPPORT,\n  HAS_MSSAVEBLOB_SUPPORT,\n  IS_CHROME_OR_IOS,\n  IS_SAFARI,\n  STATUSES\n} from './constants';\n\n// utils\nimport {\n  createBlob,\n  createObjectUrl,\n  noop,\n  openPopupOrNavigate,\n  passThrough,\n  revokeObjectUrl,\n  saveWithDownloadAttribute,\n  saveWithFileReader,\n  saveWithSaveMsBlob,\n  setAutoBom\n} from './utils';\n\n// types\nimport type {\n  Options,\n  Savery as SaveryType\n} from './types';\n\nclass Savery {\n  constructor(data: any, name: string, options: Options = {}): SaveryType {\n    const {\n      mimeType,\n      onAbort = noop,\n      onAfterSave = passThrough,\n      onBeforeSave = passThrough,\n      onError = noop,\n      onStartSave = noop,\n      onEndSave = noop,\n      shouldAutoBom = true\n    } = options;\n\n    this.autoBOM = shouldAutoBom;\n    this.data = data;\n    this.error = null;\n    this.filename = name;\n    this.forceLoad = mimeType === DEFAULT_MIME_TYPE;\n    this.mimeType = mimeType;\n\n    this.onAbort = onAbort;\n    this.onAfterSave = onAfterSave;\n    this.onBeforeSave = onBeforeSave;\n    this.onError = onError;\n    this.onStartSave = onStartSave;\n    this.onEndSave = onEndSave;\n\n    return this;\n  }\n\n  autoBOM: boolean = true;\n  data: any = null;\n  error: ?Error = null;\n  filename: string = '';\n  forceLoad: boolean = false;\n  onAbort: Function = noop;\n  onAfterSave: Function = passThrough;\n  onBeforeSave: Function = passThrough;\n  onEndSave: Function = noop;\n  onError: Function = noop;\n  onStartSave: Function = noop;\n  size: number = 0;\n  status: string = STATUSES.PENDING;\n  mimeType: string = DEFAULT_MIME_TYPE;\n\n  /**\n   * execute the onAfterSave method and return the results\n   *\n   * @returns {*}\n   * @private\n   */\n  _onAfterSave = (): any => {\n    if (this.status !== STATUSES.COMPLETE) {\n      return Promise.reject(this);\n    }\n\n    return this.onAfterSave(this);\n  };\n\n  /**\n   * execute the onBeforeSave method and return the results\n   *\n   * @returns {*}\n   * @private\n   */\n  _onBeforeSave = (): any => {\n    if (this.status !== STATUSES.PENDING) {\n      return Promise.reject(this);\n    }\n\n    return this.onBeforeSave(this.data);\n  };\n\n  /**\n   * create the file and associated objectUrl\n   *\n   * @returns {{file: Blob, objectUrl: string}}\n   * @private\n   */\n  _onCreateFile = () => {\n    if (this.status !== STATUSES.PROCESSING) {\n      return Promise.reject(this);\n    }\n\n    const blob: Blob = createBlob(this.data, this.mimeType);\n    const file: Blob = this.autoBOM ? setAutoBom(blob) : blob;\n    const objectUrl: string = createObjectUrl(file);\n\n    this.size = blob.size;\n\n    return {\n      file,\n      objectUrl\n    };\n  };\n\n  /**\n   * trigger the end of the save process\n   *\n   * @param {string} objectUrl\n   * @returns {string|Promise}\n   * @private\n   */\n  _onEndSave = (objectUrl: string): string|Promise<any> => {\n    if (this.status !== STATUSES.PROCESSING) {\n      return Promise.reject(this);\n    }\n\n    revokeObjectUrl(objectUrl);\n\n    this.status = STATUSES.COMPLETE;\n    this.onEndSave(this);\n\n    return objectUrl;\n  };\n\n  /**\n   * trigger the onError method and reject the promise\n   *\n   * @param {Error} error\n   * @returns {Savery|Promise}\n   * @private\n   */\n  _onError = (error: ?Error) => {\n    if (this.status !== STATUSES.CANCELLED) {\n      this.status = STATUSES.ERROR;\n    }\n\n    this.onError(error);\n\n    return Promise.reject(error);\n  };\n\n  /**\n   * save the file based on browser capabilities\n   *\n   * @param {object} fileObject\n   * @param {Blob} fileObject.file\n   * @param {string} fileObject.objectUrl\n   * @returns {string|Promise}\n   * @private\n   */\n  _onSave = (fileObject: Object) => {\n    if (this.status !== STATUSES.PROCESSING) {\n      return Promise.reject(this);\n    }\n\n    const {\n      file,\n      objectUrl\n    } = fileObject;\n\n    if (HAS_MSSAVEBLOB_SUPPORT) {\n      saveWithSaveMsBlob(file, this.filename);\n\n      return objectUrl;\n    }\n\n    if (HAS_DOWNLOAD_ATTRIBUTE_SUPPORT) {\n      saveWithDownloadAttribute(objectUrl, this.filename);\n\n      return objectUrl;\n    }\n\n    if ((IS_CHROME_OR_IOS || (this.forceLoad && IS_SAFARI)) || GLOBAL.FileReader) {\n      return saveWithFileReader(file);\n    }\n\n    if (this.forceLoad) {\n      GLOBAL.location.href = objectUrl;\n    } else {\n      openPopupOrNavigate(objectUrl);\n    }\n\n    this.status = STATUSES.COMPLETE;\n\n    return objectUrl;\n  };\n\n  /**\n   * trigger the beginning of the save process\n   *\n   * @returns {Savery|Promise}\n   * @private\n   */\n  _onStartSave = (): Promise<string>|string => {\n    if (this.status !== STATUSES.PENDING) {\n      return Promise.reject(this);\n    }\n\n    this.status = STATUSES.PROCESSING;\n    this.onStartSave(this);\n\n    return this;\n  };\n\n  /**\n   * abort the save process\n   *\n   * @returns {Savery|Promise}\n   */\n  abort() {\n    if (this.status === STATUSES.PENDING || this.status === STATUSES.PROCESSING) {\n      this.status = STATUSES.CANCELLED;\n      this.error = new Error(`Savery for ${this.filename} was aborted.`);\n\n      this.onAbort(this);\n\n      return this;\n    }\n\n    this.error = new Error(`Savery has already completed for ${this.filename}.`);\n\n    return Promise.reject(this);\n  }\n\n  /**\n   * execute the saving of the file\n   *\n   * @returns {Promise}\n   */\n  save() {\n    return Promise.resolve()\n      .then(this._onBeforeSave)\n      .then(this._onStartSave)\n      .then(this._onCreateFile)\n      .then(this._onSave)\n      .then(this._onEndSave)\n      .then(this._onAfterSave)\n      .catch(this._onError);\n  }\n}\n\nexport default Savery;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Savery.js\n **/","// @flow\n\nimport type {\n  Statuses\n} from './types';\n\nconst DEFAULT_MIME_TYPE: string = 'application/octet-stream';\nconst MIME_TYPE_REGEXP: RegExp = /^[a-zA-Z\\-]+\\/([a-zA-Z0-9.\\-+]+)+$/;\n\nconst STATUSES: Statuses = {\n  CANCELLED: 'CANCELLED',\n  COMPLETE: 'COMPLETE',\n  ERROR: 'ERROR',\n  PENDING: 'PENDING',\n  PROCESSING: 'PROCESSING'\n};\n\nconst GLOBAL: Object = window || global;\nconst DOCUMENT: Object = GLOBAL.document;\n\nconst URL: Object = GLOBAL.URL || GLOBAL.webkitURL;\nconst LINK: HTMLAnchorElement = DOCUMENT.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n\nconst AUTO_BOM_REGEXP: RegExp = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nconst CHROME_OR_IOS_REGEXP: RegExp = /CriOS\\/[\\d]+/;\nconst READER_REPLACE_REGEXP: RegExp = /^data:[^;]*;/;\nconst SAFARI_REGEXP: RegExp = /constructor/i;\n\nconst HAS_DOWNLOAD_ATTRIBUTE_SUPPORT: boolean = 'download' in LINK;\nconst HAS_MSSAVEBLOB_SUPPORT: boolean = !!(GLOBAL.navigator && GLOBAL.navigator.msSaveBlob);\nconst IS_CHROME_OR_IOS: boolean = CHROME_OR_IOS_REGEXP.test(GLOBAL.navigator.userAgent);\nconst IS_SAFARI: boolean = SAFARI_REGEXP.test(GLOBAL.HTMLElement) || GLOBAL.safari;\n\nconst REVOKE_TIMEOUT: number = 30000;\n\nexport {AUTO_BOM_REGEXP};\nexport {CHROME_OR_IOS_REGEXP};\nexport {DEFAULT_MIME_TYPE};\nexport {GLOBAL};\nexport {HAS_DOWNLOAD_ATTRIBUTE_SUPPORT};\nexport {HAS_MSSAVEBLOB_SUPPORT};\nexport {IS_CHROME_OR_IOS};\nexport {IS_SAFARI};\nexport {LINK};\nexport {MIME_TYPE_REGEXP};\nexport {READER_REPLACE_REGEXP};\nexport {REVOKE_TIMEOUT};\nexport {SAFARI_REGEXP};\nexport {STATUSES};\nexport {URL};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","// @flow\n\n// constants\nimport {\n  AUTO_BOM_REGEXP,\n  DEFAULT_MIME_TYPE,\n  GLOBAL,\n  IS_CHROME_OR_IOS,\n  LINK,\n  MIME_TYPE_REGEXP,\n  READER_REPLACE_REGEXP,\n  REVOKE_TIMEOUT\n} from './constants';\n\n// conditional dependencies\nconst mime = process.env.SAVERY === 'full' ? require('mime-types') : require('./mime');\n\nconst CONFIRMATION_MESSAGE: string = 'Displaying new document\\n\\n Use Save As... to download, ' +\n  'then click back in your browser to return to this page.';\n\n/**\n * generate a new blob based on the data and MIME type\n *\n * @param {*} data\n * @param {string} mimeType\n * @returns {Blob}\n */\nconst createBlob = (data: any, mimeType: string): Blob => {\n  return new GLOBAL.Blob([data], {\n    type: mimeType\n  });\n};\n\nexport {createBlob};\n\n/**\n * create the objectUrl with the GLOBAL URL object\n *\n * @param {Blob} blob\n * @returns {string}\n */\nconst createObjectUrl = (blob: Blob): string => {\n  return URL.createObjectURL(blob);\n};\n\nexport {createObjectUrl};\n\n/**\n * get the MIME type of the file\n *\n * if the MIME type was explicitly passed, check if it exists in our list, and if not\n * check to see if it can be used directly (as in someone passed in the full MIME type)\n *\n * if no MIME type is passed, intuit the type from the file extension, and if that type\n * does not exist in our list then fall back to the DEFAULT_MIME_TYPE\n *\n * @param {string} passedMimeType\n * @param {string} fileName\n * @returns {string}\n */\nconst getMimeType = (passedMimeType: ?string, fileName: string): string => {\n  if (!passedMimeType) {\n    const fileExtension: string = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n\n    return mime.lookup(fileExtension) || DEFAULT_MIME_TYPE;\n  }\n\n  const lowerCaseMimeType: string = passedMimeType.toLowerCase();\n\n  if (MIME_TYPE_REGEXP.test(lowerCaseMimeType.split(';')[0])) {\n    return lowerCaseMimeType;\n  }\n\n  const searchedMimeType: string = mime.lookup(lowerCaseMimeType);\n\n  if (searchedMimeType) {\n    return searchedMimeType;\n  }\n\n  return DEFAULT_MIME_TYPE;\n};\n\nexport {getMimeType};\n\n/**\n * no-no function\n *\n * @returns {null}\n */\nconst noop = (): null => {\n  return null;\n};\n\nexport {noop};\n\n/**\n * either open a popup (if allowed) or navigate to the location\n *\n * @param {string} url\n */\nconst openPopupOrNavigate = (url: string) => {\n  const popup: Object = GLOBAL.open(url, '_blank');\n\n  if (!popup) {\n    if (confirm(CONFIRMATION_MESSAGE)) {\n      GLOBAL.location.href = url;\n    }\n  }\n};\n\nexport {openPopupOrNavigate};\n\n/**\n * pass-through function\n *\n * @param {*} object\n * @returns {T}\n */\nconst passThrough = (object: any): any => {\n  return object;\n};\n\nexport {passThrough};\n\n/**\n * revoke the existing objectUrl\n *\n * @param {Object|string} file\n */\nconst revokeObjectUrl = (file: Object|string) => {\n  setTimeout(() => {\n    if (typeof file === 'string') {\n      URL.revokeObjectURL(file);\n    } else {\n      file.remove();\n    }\n  }, REVOKE_TIMEOUT);\n};\n\nexport {revokeObjectUrl};\n\n/**\n * trigger a click event for the given node\n *\n * @param {HTMLAnchorElement} node\n */\nconst triggerClick = (node: HTMLElement) => {\n  const event: MouseEvent = new MouseEvent('click');\n\n  node.dispatchEvent(event);\n};\n\nexport {triggerClick};\n\n/**\n * use the download attribute to trigger save\n *\n * @param {string} objectUrl\n * @param {string} name\n */\nconst saveWithDownloadAttribute = (objectUrl: string, name: string) => {\n  LINK.href = objectUrl;\n  LINK.download = name;\n\n  triggerClick(LINK);\n};\n\nexport {saveWithDownloadAttribute};\n\n/**\n * use the FileReader object (native) to trigger save\n *\n * @param {Blob} blob\n * @returns {Promise}\n */\nconst saveWithFileReader = (blob: Blob): Promise<string> => {\n  if (!blob) {\n    return Promise.reject(new Error('No data provided to FileReader.'));\n  }\n\n  return new Promise((resolve: Function) => {\n    const reader: FileReader = new GLOBAL.FileReader();\n\n    reader.onloadend = function() {\n      const url = IS_CHROME_OR_IOS ? reader.result : reader.result.replace(READER_REPLACE_REGEXP, 'data:attachment/file;');\n\n      openPopupOrNavigate(url);\n\n      resolve(url);\n    };\n\n    reader.readAsDataURL(blob);\n  });\n};\n\nexport {saveWithFileReader};\n\n/**\n * for IE10 (which has Blob but no URL support) use the native msSaveBlob\n *\n * @param {Blob} blob\n * @param {string} filename\n */\nconst saveWithSaveMsBlob = (blob: Blob, filename: string) => {\n  GLOBAL.navigator.msSaveBlob(blob, filename);\n};\n\nexport {saveWithSaveMsBlob};\n\n/**\n * set the BOM for the blob\n *\n * @param {Blob} blob\n * @param {string} blob.type\n * @returns {Blob}\n */\nconst setAutoBom = (blob: Blob): Blob => {\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (AUTO_BOM_REGEXP.test(blob.type)) {\n    return new GLOBAL.Blob([String.fromCharCode(0xFEFF), blob], {\n      type: blob.type\n    });\n  }\n\n  return blob;\n};\n\nexport {setAutoBom};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","const MIME_TYPES = {\n  '7z': 'application/x-7z-compressed',\n  bmp: 'image/bmp',\n  conf: 'text/plain',\n  css: 'text/css',\n  csv: 'text/csv',\n  dmg: 'application/x-apple-diskimage',\n  doc: 'application/msword',\n  docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  gif: 'image/gif',\n  gz: 'application/x-gzip',\n  html: 'text/html',\n  jar: 'application/java-archive',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  js: 'application/javascript',\n  json: 'application/json',\n  log: 'text/plain',\n  map: 'application/json',\n  mov: 'video/quicktime',\n  mp3: 'audio/mp3',\n  mp4: 'video/mp4',\n  oga: 'audio/ogg',\n  ogg: 'audio/ogg',\n  ogv: 'video/ogg',\n  pdf: 'application/pdf',\n  png: 'image/png',\n  ps: 'application/postscript',\n  pps: 'application/vnd.ms-powerpoint',\n  ppt: 'application/vnd.ms-powerpoint',\n  pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  psd: 'image/vnd.adobe.photoshop',\n  qt: 'video/quicktime',\n  rar: 'application/x-rar-compressed',\n  rtf: 'text/rtf',\n  svg: 'image/svg+xml',\n  text: 'text/plain',\n  torrent: 'application/x-bittorrent',\n  txt: 'text/plain',\n  tiff: 'image/tiff',\n  war: 'application/java-archive',\n  weba: 'audio/webm',\n  webm: 'video/webm',\n  webp: 'image/webp',\n  xls: 'application/vnd.ms-excel',\n  xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  zip: 'application/zip'\n};\n\n/**\n * lookup the mapped MIME type based on the extension provided\n *\n * @param {string} extension\n * @returns {string}\n */\nconst lookup = (extension: string): string => {\n  return MIME_TYPES[extension] || '';\n};\n\nexport default {\n  lookup\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mime.js\n **/"],"sourceRoot":""}